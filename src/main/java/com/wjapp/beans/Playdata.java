package com.wjapp.beans;
// Generated 2017-7-14 15:45:30 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cascade;

/**
 * Playdata generated by hbm2java
 */
@Entity
@Table(name = "playdata", catalog = "moviedb")
public class Playdata implements java.io.Serializable {

	private Integer playdataId;
	private Film film;
	private Integer movielength;
	private Date startdate;
	private Date enddate;
	private Date lastUpdate;
	
	private String filmname;
	private String filmpicture;
	private String director;
	private String location;
	private String description;
	private String type;
	private String language;
	
	
	@Column(name = "filmname", nullable = true, length = 50)
	public String getFilmname() {
		return filmname;
	}

	public void setFilmname(String filmname) {
		this.filmname = filmname;
	}

	@Column(name = "filmpicture", nullable = true, length = 50)
	public String getFilmpicture() {
		return filmpicture;
	}

	public void setFilmpicture(String filmpicture) {
		this.filmpicture = filmpicture;
	}

	@Column(name = "director", nullable = true, length = 20)
	public String getDirector() {
		return director;
	}

	public void setDirector(String director) {
		this.director = director;
	}

	@Column(name = "location", nullable = true, length = 20)
	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "description", nullable = true)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	private Set<Schedule> schedules = new HashSet<Schedule>(0);
	private Set<Store> playdataStore = new HashSet<Store>(0);

	public Playdata() {
	}

	public Playdata(Film film, Date lastUpdate) {
		this.film = film;
		this.lastUpdate = lastUpdate;
	}

	public Playdata(Film film, Integer movielength, Date startdate, Date enddate, Date lastUpdate,
			Set<Schedule> schedules) {
		this.film = film;
		this.movielength = movielength;
		this.startdate = startdate;
		this.enddate = enddate;
		this.lastUpdate = lastUpdate;
		this.schedules = schedules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "playdata_id", unique = true, nullable = false)
	public Integer getPlaydataId() {
		return this.playdataId;
	}

	public void setPlaydataId(Integer playdataId) {
		this.playdataId = playdataId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "film_id", nullable = false)
	public Film getFilm() {
		return this.film;
	}

	public void setFilm(Film film) {
		this.film = film;
	}

	@Column(name = "movielength")
	public Integer getMovielength() {
		return this.movielength;
	}

	public void setMovielength(Integer movielength) {
		this.movielength = movielength;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "startdate", length = 10)
	public Date getStartdate() {
		return this.startdate;
	}

	public void setStartdate(Date startdate) {
		this.startdate = startdate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "enddate", length = 10)
	public Date getEnddate() {
		return this.enddate;
	}

	public void setEnddate(Date enddate) {
		this.enddate = enddate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = true, length = 19)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "playdata")
	public Set<Schedule> getSchedules() {
		return this.schedules;
	}

	public void setSchedules(Set<Schedule> schedules) {
		this.schedules = schedules;
	}
	
	
	@ManyToMany()
	@JoinTable(
	        name = "storeplaydata",
	        joinColumns = @JoinColumn(name = "playdata_id"),
	        inverseJoinColumns = @JoinColumn(name = "store_id")
	)
	@Cascade(value=org.hibernate.annotations.CascadeType.SAVE_UPDATE)
	public Set<Store> getPlaydataStore() {
		return playdataStore;
	}

	public void setPlaydataStore(Set<Store> playdataStore) {
		this.playdataStore = playdataStore;
	}
	@Column(name = "type", nullable = true, length = 20)
	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}
	@Column(name = "language", nullable = true, length = 20)
	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

}
