package com.wjapp.beans;
// Generated 2017-7-14 15:45:30 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Saleinfo generated by hbm2java
 */
@Entity
@Table(name = "saleinfo", catalog = "moviedb", uniqueConstraints = @UniqueConstraint(columnNames = { "salel_date",
		"schedule_id", "customer_id" }))
public class Saleinfo implements java.io.Serializable {

	private Integer saleId;
	private Customer customer;
	private Schedule schedule;
	private Staff staff;
	private Date salelDate;
	private Date ticketDate;
	private String ticketType;
	private Short ticketNumber;
	private String seatNo;
	private Date lastUpdate;
	private Boolean isprintTicket;
	private Boolean isplayment;
	private Long totalPrice;

	private Set<Payment> payments = new HashSet<Payment>(0);

	public Saleinfo() {
	}

	public Saleinfo(Customer customer, Schedule schedule, Staff staff, Date salelDate, Date lastUpdate) {
		this.customer = customer;
		this.schedule = schedule;
		this.staff = staff;
		this.salelDate = salelDate;
		this.lastUpdate = lastUpdate;
	}

	public Saleinfo(Customer customer, Schedule schedule, Staff staff, Date salelDate, Date ticketDate,
			String ticketType, Short ticketNumber, String seatNo, Date lastUpdate, Boolean isprintTicket,
			Boolean isplayment, Long totalPrice, Set<Payment> payments) {
		this.customer = customer;
		this.schedule = schedule;
		this.staff = staff;
		this.salelDate = salelDate;
		this.ticketDate = ticketDate;
		this.ticketType = ticketType;
		this.ticketNumber = ticketNumber;
		this.seatNo = seatNo;
		this.lastUpdate = lastUpdate;
		this.isprintTicket = isprintTicket;
		this.isplayment = isplayment;
		this.totalPrice = totalPrice;
		this.payments = payments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "sale_id", unique = true, nullable = false)
	public Integer getSaleId() {
		return this.saleId;
	}

	public void setSaleId(Integer saleId) {
		this.saleId = saleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "schedule_id", nullable = false)
	public Schedule getSchedule() {
		return this.schedule;
	}

	public void setSchedule(Schedule schedule) {
		this.schedule = schedule;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "staff_id", nullable = false)
	public Staff getStaff() {
		return this.staff;
	}

	public void setStaff(Staff staff) {
		this.staff = staff;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "salel_date", nullable = true, length = 19)
	public Date getSalelDate() {
		return this.salelDate;
	}

	public void setSalelDate(Date salelDate) {
		this.salelDate = salelDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ticket_date", length = 19)
	public Date getTicketDate() {
		return this.ticketDate;
	}

	public void setTicketDate(Date ticketDate) {
		this.ticketDate = ticketDate;
	}

	@Column(name = "ticket_type", length = 10)
	public String getTicketType() {
		return this.ticketType;
	}

	public void setTicketType(String ticketType) {
		this.ticketType = ticketType;
	}

	@Column(name = "ticket_number")
	public Short getTicketNumber() {
		return this.ticketNumber;
	}

	public void setTicketNumber(Short ticketNumber) {
		this.ticketNumber = ticketNumber;
	}

	@Column(name = "seat_no", length = 50)
	public String getSeatNo() {
		return this.seatNo;
	}

	public void setSeatNo(String seatNo) {
		this.seatNo = seatNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = true, length = 19)
	public Date getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@Column(name = "isprint_ticket")
	public Boolean getIsprintTicket() {
		return this.isprintTicket;
	}

	public void setIsprintTicket(Boolean isprintTicket) {
		this.isprintTicket = isprintTicket;
	}

	@Column(name = "isplayment")
	public Boolean getIsplayment() {
		return this.isplayment;
	}

	public void setIsplayment(Boolean isplayment) {
		this.isplayment = isplayment;
	}

	@Column(name = "total_price", precision = 10, scale = 0)
	public Long getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(Long totalPrice) {
		this.totalPrice = totalPrice;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "saleinfo")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}
	

}
